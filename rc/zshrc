# for interactive shells

# make option and trap changes local to functions
setopt LOCAL_OPTIONS LOCAL_TRAPS

# when there's an ambiguous completion, offer the first one right away
#setopt MENU_COMPLETE

# don't beep on ambiguous completion
unsetopt LIST_BEEP

# Treat the #, ~ and ^ characters as part of patterns for filename generation, etc.
setopt EXTENDED_GLOB

# Long history.
HISTSIZE=60
# Normally "history" is "fc -l", which only shows the last 16 entries.
# We force the entries to start at 1 (and end at the current entry).
alias history='fc -l 1'

[ -d /usr/local/share/zsh-completions ] && fpath=(/usr/local/share/zsh-completions $fpath)
# remove redundant entries in path, cdpath, etc.
typeset -U path cdpath manpath fpath mailpath

# basic aliases
alias vi=vim

# bash-ism
bindkey '^R' history-incremental-search-backward

# expand history when space is typed
bindkey ' ' magic-space

# other useful things to autoload
autoload zmv	# better move

# super completion.  unfortunately this takes a while to load
# disabled -- it was sometimes taking too long to complete, too
# autoload compinit
# compinit

# when completing after a CD-type command, complete only directories
# or links to directories:
compctl -/ cd chdir dirs pushd

# environment variables
export EDITOR=vim
export VISUAL=vim

# IIRC Nose used PY_LOG_FORMAT and I've seen adopted it in my scripting
export PY_LOG_FORMAT="%(asctime)s %(levelname).1s %(process)5d %(threadName)s/%(name)s:%(filename)s:%(lineno)d: %(message)s"
#export PY_LOG_LEVEL=warn

set -o emacs

system_path=(
  /usr/local/git/current/bin
  /usr/local/mysql/bin
  /usr/local/bin
  /usr/bin
  /bin
  /usr/local/sbin
  /usr/sbin
  /sbin
)

path=($^system_path(N-/))

[ -x /usr/libexec/java_home ] && export JAVA_HOME="$(/usr/libexec/java_home -v 1.8)"

# Company specific initialization
[ -r ~/.nestrc ] && . ~/.nestrc
[ -r ~/projects/$USER/rc.zsh ] && . ~/projects/$USER/rc.zsh

if [ -r ~/local/py/bin/activate ] ; then
  VIRTUAL_ENV_DISABLE_PROMPT=1 # Although not necessary because we recompute the prompt
  . ~/local/py/bin/activate
fi

user_path=(
  ~/bin
  ~/bin/$(hostname -s)
  ${path[@]}
)
path=($^user_path(N-/))

# For pj ("project jump") plugin
[ -d ~/projects ] && PROJECT_PATHS=(~/projects)

# For ssh-agent plugin
ssh_key_names=($(egrep -l 'PRIVATE KEY' ~/.ssh/id_* 2> /dev/null | sed -e 's,.*/,,' | tr '\n' ' '))
if [ -n "$ssh_key_names" ]; then
  zstyle :omz:plugins:ssh-agent agent-forwarding yes
  zstyle :omz:plugins:ssh-agent identities $ssh_key_names
fi
unset ssh_key_names

. ~/rc/zsh_functions
